---
- name: Create Terraform manifests and components
  hosts: localhost
  connection: local
  
  vars:
    instance_type: t2.micro
    instance_name: terrafor_dev
    terraform_sec: terraform_sec
    instruqt_tf_build: myTest
    working_dir: /tmp/srv/
    templates_dir: /tmp/template
    survey_j2: survey_spec.json.j2
    survey_file: remove_vm_survey.json
    student_user: student
    student_password: learn_ansible

  tasks:

     - name: Clone Terraform Manifests and build repo
       ansible.builtin.git:
        repo: "http://gitea:3000/student/terraform_builds.git"
        dest: /tmp/srv
        clone: yes

     - name: Create Terraform project 
       ansible.builtin.file:
        path: /{{ working_dir }}/{{ instruqt_tf_build }}
        state: directory
        mode: '755'

     - name: Create cloud-init for Terraform manifest
       ansible.builtin.copy:
        src: cloud-init.conf
        dest: /{{ working_dir }}/{{ instruqt_tf_build }}/cloud-init.conf

     - name: Create main Terraform manifest
       template:
        src: main.j2
        dest: /{{ working_dir }}/{{ instruqt_tf_build }}/main.tf

     - name: Create variable Terraform manifest
       template:
        src: variables.j2
        dest: /{{ working_dir }}/{{ instruqt_tf_build }}/variables.tf 

#### Terraform Deploy

     - name: Create gitignore for Terraform working files
       ansible.builtin.copy:
        dest: /{{ working_dir }}/{{ instruqt_tf_build }}/.gitignore
        content: |
          .terraform
          .terraform.lock.hcl

     - name: Creating Terraform IoC
       block:
         - name: Initialize Terraform Provider
           community.general.terraform:
            project_path: /{{ working_dir }}/{{ instruqt_tf_build }}
            state: absent
            force_init: true
    
         - name: Deploy Terraform Instance
           community.general.terraform:
            project_path: /{{ working_dir }}/{{ instruqt_tf_build }}
            state: present
           register: deployed_tf

     - name: Configure git to store credentials
       community.general.git_config:
        name: credential.helper
        scope: global
        value: store --file /tmp/git-creds

     - name: Configure repo dir as git safe dir
       community.general.git_config:
        name: safe.directory
        scope: global
        value: "/tmp/terraform_builds"

     - name: Store repo credentials in git-creds file
       ansible.builtin.copy:
        dest: /tmp/git-creds
        mode: 0644
        content: "http://{{ student_user }}:{{ student_password }}@{{ 'gitea:3000' | urlencode }}"

     - name: Configure git username
       community.general.git_config:
        name: user.name
        scope: global
        value: "{{ ansible_user }}"

     - name: Configure git email address
       community.general.git_config:
        name: user.email
        scope: global
        value: "{{ ansible_user }}@local"

     - name: Add remote origin to repo
       ansible.builtin.command:
        cmd: "{{ item }}"
        chdir: "/tmp/terraform_builds"   
       register: __output
       changed_when: __output.rc == 0
       loop:
         - "git remote add origin http://gitea:3000/{{ student_user }}/terraform_builds.git"
         - "git checkout -b main"
         - "git add ."
         - "git commit -m'Initial commit'"
         - "git push -u origin main --force"




    #  - name: Updating Terraform Build list 
    #    block:  
    #     - name:
    #       command: "ls {{ working_dir }}"
    #       register: dir_out

    #     - debug: var={{item}}
    #       with_items: dir_out.stdout_lines

    #     - name: Creating Survey spec
    #       template:
    #         src: "{{ survey_j2 }}"
    #         dest: "{{ working_dir }}/{{ survey_file }}"

    #     - name: Formating list
    #       register: slurpfile
    #       slurp:
    #          src: "{{ working_dir }}/{{ survey_file }}"

    #     - name: Encoding Survey list
    #       debug:
    #         var: slurpfile['content'] | b64decode

    #     - name: Creating Workflow with Survey
    #       awx.awx.workflow_job_template:
    #         name: "Remove Terraform Manifest"
    #         organization: "ACME"
    #         state: present
    #         tower_config_file: "tower_cli.cfg"
    #         inventory: "terraform_nodes_aws"
    #         survey: "{{ slurpfile['content'] | b64decode }}"
    #         survey_enabled: true
