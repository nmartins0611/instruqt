---
- name: Create Terraform manifests and components
  hosts: localhost
  connection: local
  vars:
   access_key: XXXX
   secret_key: XXXX
   region: XXXX
   token: XXXX
   controller_ssh_key: XXXX
   instance_names: XXXX
   instance_roles: XXXX
   instance_type: XXXX
   ami_number: ami-0ad8ecac8af5fc52b
   vpc_id: vpc-63f9df0b
   aws_subnet: subnet-1fd6fe76
   my_terraform_build: myTest
   terraform_group_sec:
   working_dir: /tmp/srv/build_repo/
   survey_j2: survey_spec.json.j2
   survey_file: remove_vm_survey.json


  tasks:

     - name: Clone Terraform Manifests and build repo
       ansible.builtin.git:
        repo: "http://gitea:3000/student/terraform_lab.git"
        dest: /tmp/srv
        clone: yes

     - name: Create Terraform project 
       ansible.builtin.file:
        path: /{{ working_dir }}/{{ my_terraform_build }}
        state: directory
        mode: '755'

     - name: Create cloud-init for Terraform manifest
       ansible.builtin.copy:
       src: cloud-init.conf
       dest: /{{ working_dir }}/{{ my_terraform_build }}/cloud-init.conf

     - name: Create main Terraform manifest
       template:
        src: main.j2
        dest: /{{ working_dir }}/{{ my_terraform_build }}/main.tf

     - name: Create variable Terraform manifest
       template:
        src: variables.j2
        dest: /{{ working_dir }}/{{ my_terraform_build }}/variables.tf 

#### Terraform Process

    #  - name: Create gitignore for Terraform working files
    #    ansible.builtin.copy:
    #     src: /{{ templates_dir }}/terraform_ignore
    #     dest: /{{ working_dir }}/{{  my_terraform_build }}/.gitignore

    #  - name: Creating Terraform IoC
    #    block:
    #      - name: Initialize Terraform Provider
    #        community.general.terraform:
    #         project_path: /{{ working_dir }}/{{ my_terraform_build }}
    #         state: absent
    #         force_init: true
    
    #      - name: Deploy Terraform Instance
    #        community.general.terraform:
    #         project_path: /{{ working_dir }}/{{ my_terraform_build }}
    #         state: present
    #        register: deployed_tf

        #  - name: Encrypt variables and sensitive data
        #    command: ansible-vault encrypt /{{ working_dir }}/{{ my_terraform_build }}/variables.tf --vault-password-file /opt/keep_secrets.txt

